{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Supponiamo di dover partire da Milano per raggiungere Roma.\
Osserviamo la Open list, la Closed list, l\'92h(s) e la f(s):\
\
Nella prima iterazione la Open list contiene solo in nodo iniziale, ovvero Milano. L\'92algoritmo trova i candidati successor che sono Bologna e Genova. Aggiunge entrambi i candidati alla Open list dopo averne calcolato la h(s) e la f(s) e costruito il dizionario path, utile per ricostruire il percorso, infine sposta Milano dalla Open list alla Closed list, quindi avremo che:\
\
successor:'Bologna'\
h(s) = 140.2288659695112\
g(s) = 156\
f(s) = 296.22886596951116\
\
successor:'Genoa'\
h(s) = 185.24521209731353\
g(s) = 120\
f(s) = 305.2452120973135\
\
path\
"'Bologna'": ["'Milan'", 156]\
 "'Genoa'": ["'Milan'", 120]\
\
OPEN\
['6', "'Bologna'", '44.498955', '11.327591']\
['7', "'Genoa'", '44.414165', '8.942184']\
\
CLOSED\
\
['8', "'Milan'", '45.464664', '9.188540']\
\
Dopo di che la Open List viene ordinata in base ai valori delle f(s), la nuova rappresentazione della open, dopo l\'92operazione di merge \'e8:\
\
['6', "'Bologna'", '44.498955', '11.327591']\
['7', "'Genoa'", '44.414165', '8.942184\'92].\
\
\
Ora l\'92algoritmo esaminer\'e0 il nodo Bologna perch\'e9 \'e8 quello con la f(s) minore.\
Vengono generati i successor\
\
successor:'Florence'\
h(s) = 106.57464300079471\
g(s) = 252\
f(s) = 358.5746430007947\
\
path\
"'Bologna'": ["'Milan'", 156]\
"'Genoa'": ["'Milan'", 120]\
"'Florence'": ["'Bologna'", 252]\
\
OPEN\
['7', "'Genoa'", '44.414165', '8.942184']\
['5', "'Florence'", '43.769562', '11.255814']\
\
CLOSED\
\
['8', "'Milan'", '45.464664', '9.188540']\
['6', "'Bologna'", '44.498955', '11.327591']\
\
Ora viene effettuato il processo di merge e avremo:\
\
OPEN\
\
['7', "'Genoa'", '44.414165', '8.942184']\
['5', "'Florence'", '43.769562', '11.255814']\
\
Il prossimo nodo che verra esaminato \'e8 Genova, anche se non fa parte del percorso migliore, infatti l\'92algoritmo sar\'e0 in grado di accorgersene.\
\
Non genera nuovi successor perch\'e9 non ci sono nodi che non si trovino gi\'e0 nella Open o nella Closed.\
Genova viene spostato dalla Open alla Closed:\
\
OPEN\
['5', "'Florence'", '43.769562', '11.255814']\
\
CLOSED\
['8', "'Milan'", '45.464664', '9.188540']\
['6', "'Bologna'", '44.498955', '11.327591']\
['7', "'Genoa'", '44.414165', '8.942184']\
\
\
Ora passa ad esaminare il nodo di Firenze. \
Vengono generati i successor:\
\
successor:'Rome'\
h(s) = 0.0\
g(s) = 436\
f(s) = 436.0\
\
path\
"'Bologna'": ["'Milan'", 156]\
 "'Genoa'": ["'Milan'", 120]\
"'Florence'": ["'Bologna'", 252]\
 "'Rome'": ["'Florence'", 436]\}\
\
OPEN\
['1', "'Rome'", '41.902782', '12.496366']\
\
CLOSED\
['8', "'Milan'", '45.464664', '9.188540']\
['6', "'Bologna'", '44.498955', '11.327591']\
['7', "'Genoa'", '44.414165', '8.942184']\
['5', "'Florence'", '43.769562', '11.255814']\
\
Infine viene fatto il merge sulla Open.\
\
Nell\'92ultima iterazione abbiamo raggiunto il goal quindi l\'92algoritmo si ferma e stampa il percorso migliore ovvero:\
"'Milan'", "'Bologna'", "'Florence'", "'Rome'"\
\
\
}